---

- name: Generate identity-management inventory based off of engagement.json
  hosts: local
  gather_facts: false
  tasks:

  - name: "Fail If Working Directory Is Not Provided"
    fail:
      msg: "directory var needs to be provided in order to ensure a safe working directory"
    when:
      - directory is undefined or (directory | trim) == ""

  - name: "Fail If Governor Type Is Not Provided"
    fail:
      msg: "governor_type and governor_spec vars need to be provided in order to indicate babylon workflow"
    when:
      - (governor_type is undefined or (governor_type | trim) == "") or (governor_spec is undefined or (governor_spec | trim) == "")

  - name: Generate Timestamp
    set_fact:
      inv_ts: " {{ lookup('pipe','date +%Y%m%d%H%M%S') }}"

  - name: Read Engagement Data
    include_vars:
      file: "{{ directory }}/engagement.json"

  - name: Read Credentials
    include_vars:
      file: "{{ directory }}/{{ config_dir }}/{{ item }}"
    loop:
      - "ocp-admin-credentials.json"
      - "ocp-ldap-sa-credentials.json"

  - name: "Add users to inventory"
    set_fact:
      users: "{{ (users | default([])) +  [ { 'first_name': (item.first_name | trim), 'last_name': (item.last_name | trim), 'email': (item.email | trim) , 'user_name': (item.email.split('@')[0] | trim) } ] }}"
    loop: "{{ engagement_users }}"

  - name: "Add LDAP Service Account"
    set_fact:
      users: "{{ (users | default([])) + [ { 'first_name': 'LDAP', 'last_name': 'SA', 'email': 'ldap@localhost.com', 'user_name': ocp_ldap_sa_username, 'generate_password': false, 'password': ocp_ldap_sa_password  } ] }}"

  - name: "Get Unique Groups"
    set_fact:
      unique_groups: "{{ engagement_users | json_query('[].role') | unique }}"

  - name: "Set Group Membership"
    set_fact:
      usrgrp: "{{ (usrgrp | default([])) + [ {'name': item, 'members': (engagement_users | selectattr('role','equalto',item) | map(attribute='email') | map('regex_replace','@.*','') | list) } ] }}"
    loop: "{{ unique_groups }}"

  - name: Add LDAP Groups Grouping
    set_fact:
      usrgrp: "{{ (usrgrp | default([])) + [ {'name': 'ldap-members', 'childgroups': unique_groups } ] }}"

  - name: "Set List of Mail CC"
    set_fact:
      cc_list: "{{ ', '.join(( '{{ engagement_lead_email }}', '{{ technical_lead_email }}' )) }}"

  - block:
      - include_tasks: tasks/envs.yaml
        with_items: "{{ hosting_environments }}"
        loop_control:
          loop_var: hosting_env 
    when:
      - hosting_environments is defined
      - hosting_environments|length > 0
